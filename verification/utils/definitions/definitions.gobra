// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package definitions

const HalfPerm perm = 1/2
const (
	ReadL00 perm = 1/(2 << iota)
	ReadL0
	ReadL1
	ReadL2
	ReadL3
	ReadL4
	ReadL5
	ReadL6
	ReadL7
	ReadL8
	ReadL9
	ReadL10
	ReadL11
	ReadL12
	ReadL13
	ReadL14
	ReadL15
	ReadL16
	ReadL17
	ReadL18
	ReadL19
	ReadL20
)

// To be used as a precondition of functions and methods that can never be called
// from the router.
ghost
requires false
func Unreachable()

ghost
ensures !res
pure func Uncallable() (res bool) {
	return false
}

ghost
ensures false
decreases _
func IgnoreBranch()

ghost
ensures false
decreases _
func TODO()

ensures res == x+y
decreases _
pure
func add(x, y int) (res int)

// type to be used as a stub for sets of private fields in formalizations of
// third party libs
type PrivateField *int