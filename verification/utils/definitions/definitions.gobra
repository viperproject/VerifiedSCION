// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package definitions

const HalfPerm perm = 1/2
const (
	ReadL00 perm = 1/(2 << iota)
	ReadL0
	ReadL1
	ReadL2
	ReadL3
	ReadL4
	ReadL5
	ReadL6
	ReadL7
	ReadL8
	ReadL9
	ReadL10
	ReadL11
	ReadL12
	ReadL13
	ReadL14
	ReadL15
	ReadL16
	ReadL17
	ReadL18
	ReadL19
	ReadL20
	ReadL21
	ReadL22
	ReadL23
	ReadL24
	ReadL25
	ReadL26
	ReadL27
	ReadL28
	ReadL29
	ReadL30
	ReadL31
	ReadL32
	ReadL33
	ReadL34
	ReadL35
	ReadL36
	ReadL37
	ReadL38
	ReadL39
	ReadL40
	ReadL41
	ReadL42
	ReadL43
	ReadL44
	ReadL45
	ReadL46
	ReadL47
	ReadL48
	ReadL49
	ReadL50
	ReadL51
	ReadL52
	ReadL53
	ReadL54
	ReadL55
)

// To be used as a precondition of functions and methods that can never be called
// from the router.
ghost
requires false
func Unreachable()

ghost
ensures !res
pure func Uncallable() (res bool) {
	return false
}

ghost
ensures false
decreases _
func IgnoreBranch()

ghost
ensures false
decreases _
func TODO()

ensures res == x+y
decreases _
pure
func add(x, y int) (res int)

// type to be used as a stub for sets of private fields in formalizations of
// third party libs
type PrivateField *int

// ghost
pure
requires b
decreases
func Asserting(ghost b bool) bool {
	return true
}