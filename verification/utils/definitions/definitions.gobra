// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package definitions

ensures typeOf(v) == type[bool] ==> res
ensures typeOf(v) == type[byte] ==> res
ensures typeOf(v) == type[rune] ==> res
ensures typeOf(v) == type[int]  ==> res
ensures typeOf(v) == type[int8] ==> res
ensures typeOf(v) == type[int16] ==> res
ensures typeOf(v) == type[int32] ==> res
ensures typeOf(v) == type[int64] ==> res
ensures typeOf(v) == type[uint] ==> res
ensures typeOf(v) == type[uint8] ==> res
ensures typeOf(v) == type[uint16] ==> res
ensures typeOf(v) == type[uint32] ==> res
ensures typeOf(v) == type[uint64] ==> res
ensures typeOf(v) == type[uintptr] ==> res
ensures typeOf(v) == type[string] ==> res
pure func IsOfPrimitiveType(v interface{}) (res bool)

const ReadL1 perm = 1/2
const ReadL2 perm = 1/4
const ReadL3 perm = 1/8
const ReadL4 perm = 1/16
const ReadL5 perm = 1/32
const ReadL6 perm = 1/64
const ReadL7 perm = 1/128
const ReadL8 perm = 1/256
const ReadL9 perm = 1/512
const ReadL10 perm = 1/1024
const ReadL11 perm = 1/2048
const ReadL12 perm = 1/4096
const ReadL13 perm = 1/8192
const ReadL14 perm = 1/16384
const ReadL15 perm = 1/32768
const ReadL16 perm = 1/65536
const ReadL17 perm = 1/131072
const ReadL18 perm = 1/262144
const ReadL19 perm = 1/524288
const ReadL20 perm = 1/1048576

