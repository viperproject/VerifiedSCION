// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package slices

import "github.com/scionproto/scion/verification/utils/seqs"

/** Bytes **/
func AbsSliceC_Bytes_test() {
	s := make([]byte, 10)
	ghost contents := seqs.NewSeqByte(10)
	fold AbsSliceC_Bytes(s, 0, 10, contents)
	// assert false // fails
}

func AbsSlice_Bytes_test() {
	s := make([]byte, 10)
	fold AbsSlice_Bytes(s, 0, 10)
	// assert false // fails
}

/** Any **/
func AbsSliceC_Any_test() {
	s := make([]any, 1)
	var elem interface{} = int(1)
	ghost contents := seq[any]{elem}
	s[0] = elem
	fold AbsSliceC_Any(s, 0, 1, contents)
	// assert false // fails
}

func AbsSlice_Any_test() {
	s := make([]any, 10)
	fold AbsSlice_Any(s, 0, 10)
	// assert false // fails
}
