// Copyright 2017 Google, Inc. All rights reserved.
//
// Use of this source code is governed by a BSD-style license
// that can be found in the LICENSE file in the root of the source
// tree.
//

// +gobra

package layers

import "github.com/scionproto/scion/verification/utils/slices"

func BFD_test() {
	ensures slices.AbsSlice_Bytes(s1, 0, len(s1))
	decreases
	outline(
	s1 := []byte{1, 2, 3}
	fold slices.AbsSlice_Bytes(s1, 0, len(s1))
	)
	var b *BFDAuthHeader = &BFDAuthHeader{BFDAuthType(1), BFDAuthKeyID(1), BFDAuthSequenceNumber(1), BFDAuthData(s1)}
	fold b.Mem()
	ensures slices.AbsSlice_Bytes(s2, 0, len(s2))
	decreases
	outline(
	s2 := []byte{1, 2, 3}
	fold slices.AbsSlice_Bytes(s2, 0, len(s2))
	)
	ensures slices.AbsSlice_Bytes(s3, 0, len(s3))
	decreases
	outline(
	s3 := []byte{1, 2, 3}
	fold slices.AbsSlice_Bytes(s3, 0, len(s3))
	)
	var bf *BFD = &BFD{ BaseLayer{s2, s3}, BFDVersion(1), BFDDiagnostic(1), BFDState(1), true, true, true, true, true, true, BFDDetectMultiplier(1), BFDDiscriminator(1), BFDDiscriminator(1), BFDTimeInterval(1), BFDTimeInterval(1), BFDTimeInterval(1), b }
	fold bf.Mem()
}

requires b.Mem()
func BFD_test2(b *BFD) {
	unfold b.Mem()
	// following assertion fails
	//assert false
}
	
