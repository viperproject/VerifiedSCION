// Copyright 2012 Google, Inc. All rights reserved.
//
// Use of this source code is governed by a BSD-style license
// that can be found in the LICENSE file in the root of the source
// tree.

// +gobra

package layers

type BaseLayer struct {
	Contents []byte
	Payload []byte
}

pred (b *BaseLayer) Mem() {
	acc(b) && acc(b.Contents) && acc(b.Payload)
}

pred (b *BaseLayer) LayerMem() {
	acc(b) && acc(b.Contents)
}

pred (b *BaseLayer) PayloadMem() {
	acc(b) && acc(b.Payload)
}

requires b.LayerMem()
ensures acc(res)
ensures acc(res) --* b.LayerMem()
decreases
func (b *BaseLayer) LayerContents() (res []byte) {
	unfold b.LayerMem()
	res = b.Contents
	package acc(res) --* b.LayerMem() { fold b.LayerMem() }
}

requires b.PayloadMem()
ensures acc(res)
ensures acc(res) --* b.PayloadMem()
decreases
func (b *BaseLayer) LayerPayload() (res []byte) {
	unfold b.PayloadMem()
	res = b.Payload
	package acc(res) --* b.PayloadMem() { fold b.PayloadMem() }
}
