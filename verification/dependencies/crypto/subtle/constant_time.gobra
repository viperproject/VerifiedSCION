// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Signatures for the public declarations in file
// https://go.dev/src/crypto/subtle/constant_time.go

// +gobra

package subtle

import sl "github.com/scionproto/scion/verification/utils/slices"

// ConstantTimeCompare returns 1 if the two slices, x and y, have equal contents
// and 0 otherwise. The time taken is a function of the length of the slices and
// is independent of the contents.
trusted
requires 0 <= 0 && 0 <= len(x) && len(x) <= cap(x) && forall i int :: { &x[i] } 0 <= i && i < len(x) ==> acc(&x[i])
requires 0 <= 0 && 0 <= len(y) && len(y) <= cap(y) && forall i int :: { &y[i] } 0 <= i && i < len(y) ==> acc(&y[i])
ensures  len(x) != len(y) ==> res == 0
decreases
pure func ConstantTimeCompare(x, y []byte) (res int)
