// Copyright 2012 Google, Inc. All rights reserved.
//
// Use of this source code is governed by a BSD-style license
// that can be found in the LICENSE file in the root of the source
// tree.

// +gobra

package gopacket

import . "verification/utils/definitions"
import sl "verification/utils/slices"
import "verification/utils/seqs"

type SerializableLayer interface {
	pred Mem(ubuf []byte)

	requires  !opts.FixLengths
	requires  b != nil && b.Mem()
	requires  sl.Bytes(b.UBuf(), 0, len(b.UBuf()))
	requires  Mem(ubuf)
	preserves sl.Bytes(ubuf, 0, len(ubuf))
	ensures   err == nil ==> (Mem(ubuf) && b.Mem())
	ensures   err == nil ==> sl.Bytes(b.UBuf(), 0, len(b.UBuf()))
	ensures   err != nil ==> err.ErrorMem()
	decreases
	SerializeTo(b SerializeBuffer, opts SerializeOptions, ghost ubuf []byte) (err error)

	pure
	decreases
	LayerType() LayerType
}

type SerializeOptions struct {
	FixLengths bool
	ComputeChecksums bool
}

type SerializeBuffer interface {
	pred Mem()

	ghost
	pure
	requires acc(Mem(), _)
	decreases
	UBuf() []byte

	ghost
	pure
	requires acc(Mem(), _)
	requires acc(sl.Bytes(UBuf(), 0, len(UBuf())), _)
	ensures  res == seqs.ToSeqByte(UBuf())
	decreases
	View() (ghost res seq[byte])

	preserves acc(Mem(), R50)
	ensures   res === UBuf()
	decreases
	Bytes() (res []byte)

	preserves Mem()
	requires  num >= 0
	preserves sl.Bytes(UBuf(), 0, len(UBuf()))
	ensures   err == nil ==> len(UBuf()) == len(old(UBuf())) + num
	ensures   err == nil ==> len(res) == num
	ensures   err == nil ==> res === UBuf()[:num]
	ensures   err == nil ==> old(View()) == View()[num:]
	ensures   err != nil ==> UBuf() === old(UBuf())
	ensures   err != nil ==> err.ErrorMem()
	decreases
	PrependBytes(num int) (res []byte, err error)

	preserves Mem()
	requires  num >= 0
	preserves sl.Bytes(UBuf(), 0, len(UBuf()))
	ensures   err == nil ==> len(UBuf()) == len(old(UBuf())) + num
	ensures   err == nil ==> len(res) == num
	ensures   err == nil ==> res === UBuf()[len(UBuf()) - num:]
	ensures   err != nil ==> UBuf() === old(UBuf())
	ensures   err != nil ==> err.ErrorMem()
	decreases
	AppendBytes(num int) (res []byte, err error)

	preserves Mem()
	preserves sl.Bytes(UBuf(), 0, len(UBuf()))
	ensures   err != nil ==> err.ErrorMem()
	ensures   err == nil ==> len(UBuf()) == 0
	decreases
	Clear() (err error)

	requires false
	decreases
	Layers() (res []LayerType)

	requires false
	decreases
	PushLayer(LayerType)
}

ensures res != nil && res.Mem()
ensures sl.Bytes(res.UBuf(), 0, len(res.UBuf()))
decreases
func NewSerializeBuffer() (res SerializeBuffer)

// TODO: requires changes to provide access to the underlying layers
requires  false
requires  len(layerBufs) == len(layers)
preserves w.Mem()
preserves acc(layerBufs, R20)
preserves forall i int :: {&layers[i]} 0 <= i && i < len(layers) ==> acc(&layers[i]) && layers[i].Mem(layerBufs[i])
decreases
func SerializeLayers(w SerializeBuffer, opts SerializeOptions, ghost layerBufs []([]byte), layers ...SerializableLayer) error
