// Copyright 2012 Google, Inc. All rights reserved.
//
// Use of this source code is governed by a BSD-style license
// that can be found in the LICENSE file in the root of the source
// tree.

// +gobra

initEnsures gopacket.LayerTypesMem()
initEnsures LayerTypeBFD == gopacket.LayerType(122)
initEnsures gopacket.Registered(LayerTypeBFD)
initEnsures forall t gopacket.LayerType :: (0 <= t && t <= 3) ==> gopacket.Registered(t)
// The full postcondition cannot be proven because of performance reasons.
// Postconditions must be added with care to maintain the code verifiable and to not introduce unsoundness.
// Similarly, global variables declarations should be uncommented with care.
// initEnsures forall t gopacket.LayerType :: (10 <= t && t <= 146) ==> gopacket.Registered(t)
initEnsures forall t gopacket.LayerType :: t < 0 ==> !gopacket.Registered(t)
initEnsures forall t gopacket.LayerType :: 146 < t ==> !gopacket.Registered(t)
package layers

import (
	importRequires gopacket.LayerTypesMem()
	importRequires forall t gopacket.LayerType :: 0 <= t && t <= 3 ==> gopacket.Registered(t)
	importRequires forall t gopacket.LayerType :: t < 0 ==> !gopacket.Registered(t)
	importRequires forall t gopacket.LayerType :: 3 < t ==> !gopacket.Registered(t)
	"github.com/google/gopacket"
)

// This method just generates stubs for decoders so that we can avoid having to specify all 136 decoders
ensures d.Mem()
decreases
func generateDecoders() (d gopacket.Decoder)

var (
//	LayerTypeARP                          = gopacket.RegisterLayerType(10, gopacket.LayerTypeMetadata{Name: "ARP", Decoder: generateDecoders()}) // gopacket.DecodeFunc(decodeARP)
//	LayerTypeCiscoDiscovery               = gopacket.RegisterLayerType(11, gopacket.LayerTypeMetadata{Name: "CiscoDiscovery", Decoder: generateDecoders()}) // gopacket.DecodeFunc(decodeCiscoDiscovery)
//	LayerTypeEthernetCTP                  = gopacket.RegisterLayerType(12, gopacket.LayerTypeMetadata{Name: "EthernetCTP", Decoder: /* gopacket.DecodeFunc(decodeEthernetCTP)}) */ generateDecoders()})
//	LayerTypeEthernetCTPForwardData       = gopacket.RegisterLayerType(13, gopacket.LayerTypeMetadata{Name: "EthernetCTPForwardData", Decoder: nil})
//	LayerTypeEthernetCTPReply             = gopacket.RegisterLayerType(14, gopacket.LayerTypeMetadata{Name: "EthernetCTPReply", Decoder: nil})
//	LayerTypeDot1Q                        = gopacket.RegisterLayerType(15, gopacket.LayerTypeMetadata{Name: "Dot1Q", Decoder: /* gopacket.DecodeFunc(decodeDot1Q)} */ generateDecoders()})
//	LayerTypeEtherIP                      = gopacket.RegisterLayerType(16, gopacket.LayerTypeMetadata{Name: "EtherIP", Decoder: /* gopacket.DecodeFunc(decodeEtherIP)} */ generateDecoders()})
//	LayerTypeEthernet                     = gopacket.RegisterLayerType(17, gopacket.LayerTypeMetadata{Name: "Ethernet", Decoder: /* gopacket.DecodeFunc(decodeEthernet)} */ generateDecoders()})
//	LayerTypeGRE                          = gopacket.RegisterLayerType(18, gopacket.LayerTypeMetadata{Name: "GRE", Decoder: /* gopacket.DecodeFunc(decodeGRE)} */ generateDecoders()})
//	LayerTypeICMPv4                       = gopacket.RegisterLayerType(19, gopacket.LayerTypeMetadata{Name: "ICMPv4", Decoder: /* gopacket.DecodeFunc(decodeICMPv4)} */ generateDecoders()})
//	LayerTypeIPv4                         = gopacket.RegisterLayerType(20, gopacket.LayerTypeMetadata{Name: "IPv4", Decoder: /* gopacket.DecodeFunc(decodeIPv4)} */ generateDecoders()})
//	LayerTypeIPv6                         = gopacket.RegisterLayerType(21, gopacket.LayerTypeMetadata{Name: "IPv6", Decoder: /* gopacket.DecodeFunc(decodeIPv6)} */ generateDecoders()})
//	LayerTypeLLC                          = gopacket.RegisterLayerType(22, gopacket.LayerTypeMetadata{Name: "LLC", Decoder: /* gopacket.DecodeFunc(decodeLLC)} */ generateDecoders()})
//	LayerTypeSNAP                         = gopacket.RegisterLayerType(23, gopacket.LayerTypeMetadata{Name: "SNAP", Decoder: /* gopacket.DecodeFunc(decodeSNAP)} */ generateDecoders()})
//	LayerTypeMPLS                         = gopacket.RegisterLayerType(24, gopacket.LayerTypeMetadata{Name: "MPLS", Decoder: /* gopacket.DecodeFunc(decodeMPLS)} */ generateDecoders()})
//	LayerTypePPP                          = gopacket.RegisterLayerType(25, gopacket.LayerTypeMetadata{Name: "PPP", Decoder: /* gopacket.DecodeFunc(decodePPP)} */ generateDecoders()})
//	LayerTypePPPoE                        = gopacket.RegisterLayerType(26, gopacket.LayerTypeMetadata{Name: "PPPoE", Decoder: /* gopacket.DecodeFunc(decodePPPoE)} */ generateDecoders()})
//	LayerTypeRUDP                         = gopacket.RegisterLayerType(27, gopacket.LayerTypeMetadata{Name: "RUDP", Decoder: /* gopacket.DecodeFunc(decodeRUDP)} */ generateDecoders()})
//	LayerTypeSCTP                         = gopacket.RegisterLayerType(28, gopacket.LayerTypeMetadata{Name: "SCTP", Decoder: /* gopacket.DecodeFunc(decodeSCTP)} */ generateDecoders()})
//	LayerTypeSCTPUnknownChunkType         = gopacket.RegisterLayerType(29, gopacket.LayerTypeMetadata{Name: "SCTPUnknownChunkType", Decoder: nil})
//	LayerTypeSCTPData                     = gopacket.RegisterLayerType(30, gopacket.LayerTypeMetadata{Name: "SCTPData", Decoder: nil})
//	LayerTypeSCTPInit                     = gopacket.RegisterLayerType(31, gopacket.LayerTypeMetadata{Name: "SCTPInit", Decoder: nil})
//	LayerTypeSCTPSack                     = gopacket.RegisterLayerType(32, gopacket.LayerTypeMetadata{Name: "SCTPSack", Decoder: nil})
//	LayerTypeSCTPHeartbeat                = gopacket.RegisterLayerType(33, gopacket.LayerTypeMetadata{Name: "SCTPHeartbeat", Decoder: nil})
//	LayerTypeSCTPError                    = gopacket.RegisterLayerType(34, gopacket.LayerTypeMetadata{Name: "SCTPError", Decoder: nil})
//	LayerTypeSCTPShutdown                 = gopacket.RegisterLayerType(35, gopacket.LayerTypeMetadata{Name: "SCTPShutdown", Decoder: nil})
//	LayerTypeSCTPShutdownAck              = gopacket.RegisterLayerType(36, gopacket.LayerTypeMetadata{Name: "SCTPShutdownAck", Decoder: nil})
//	LayerTypeSCTPCookieEcho               = gopacket.RegisterLayerType(37, gopacket.LayerTypeMetadata{Name: "SCTPCookieEcho", Decoder: nil})
//	LayerTypeSCTPEmptyLayer               = gopacket.RegisterLayerType(38, gopacket.LayerTypeMetadata{Name: "SCTPEmptyLayer", Decoder: nil})
//	LayerTypeSCTPInitAck                  = gopacket.RegisterLayerType(39, gopacket.LayerTypeMetadata{Name: "SCTPInitAck", Decoder: nil})
//	LayerTypeSCTPHeartbeatAck             = gopacket.RegisterLayerType(40, gopacket.LayerTypeMetadata{Name: "SCTPHeartbeatAck", Decoder: nil})
//	LayerTypeSCTPAbort                    = gopacket.RegisterLayerType(41, gopacket.LayerTypeMetadata{Name: "SCTPAbort", Decoder: nil})
//	LayerTypeSCTPShutdownComplete         = gopacket.RegisterLayerType(42, gopacket.LayerTypeMetadata{Name: "SCTPShutdownComplete", Decoder: nil})
//	LayerTypeSCTPCookieAck                = gopacket.RegisterLayerType(43, gopacket.LayerTypeMetadata{Name: "SCTPCookieAck", Decoder: nil})
//	LayerTypeTCP                          = gopacket.RegisterLayerType(44, gopacket.LayerTypeMetadata{Name: "TCP", Decoder: /* gopacket.DecodeFunc(decodeTCP)} */ generateDecoders()})
//	LayerTypeUDP                          = gopacket.RegisterLayerType(45, gopacket.LayerTypeMetadata{Name: "UDP", Decoder: /* gopacket.DecodeFunc(decodeUDP)} */ generateDecoders()})
//	LayerTypeIPv6HopByHop                 = gopacket.RegisterLayerType(46, gopacket.LayerTypeMetadata{Name: "IPv6HopByHop", Decoder: /* gopacket.DecodeFunc(decodeIPv6HopByHop)} */ generateDecoders()})
//	LayerTypeIPv6Routing                  = gopacket.RegisterLayerType(47, gopacket.LayerTypeMetadata{Name: "IPv6Routing", Decoder: /* gopacket.DecodeFunc(decodeIPv6Routing)} */ generateDecoders()})
//	LayerTypeIPv6Fragment                 = gopacket.RegisterLayerType(48, gopacket.LayerTypeMetadata{Name: "IPv6Fragment", Decoder: /* gopacket.DecodeFunc(decodeIPv6Fragment)} */ generateDecoders()})
//	LayerTypeIPv6Destination              = gopacket.RegisterLayerType(49, gopacket.LayerTypeMetadata{Name: "IPv6Destination", Decoder: /* gopacket.DecodeFunc(decodeIPv6Destination)} */ generateDecoders()})
//	LayerTypeIPSecAH                      = gopacket.RegisterLayerType(50, gopacket.LayerTypeMetadata{Name: "IPSecAH", Decoder: /* gopacket.DecodeFunc(decodeIPSecAH)} */ generateDecoders()})
//	LayerTypeIPSecESP                     = gopacket.RegisterLayerType(51, gopacket.LayerTypeMetadata{Name: "IPSecESP", Decoder: /* gopacket.DecodeFunc(decodeIPSecESP)} */ generateDecoders()})
//	LayerTypeUDPLite                      = gopacket.RegisterLayerType(52, gopacket.LayerTypeMetadata{Name: "UDPLite", Decoder: /* gopacket.DecodeFunc(decodeUDPLite)} */ generateDecoders()})
//	LayerTypeFDDI                         = gopacket.RegisterLayerType(53, gopacket.LayerTypeMetadata{Name: "FDDI", Decoder: /* gopacket.DecodeFunc(decodeFDDI)} */ generateDecoders()})
//	LayerTypeLoopback                     = gopacket.RegisterLayerType(54, gopacket.LayerTypeMetadata{Name: "Loopback", Decoder: /* gopacket.DecodeFunc(decodeLoopback)} */ generateDecoders()})
//	LayerTypeEAP                          = gopacket.RegisterLayerType(55, gopacket.LayerTypeMetadata{Name: "EAP", Decoder: /* gopacket.DecodeFunc(decodeEAP)} */ generateDecoders()})
//	LayerTypeEAPOL                        = gopacket.RegisterLayerType(56, gopacket.LayerTypeMetadata{Name: "EAPOL", Decoder: /* gopacket.DecodeFunc(decodeEAPOL)} */ generateDecoders()})
//	LayerTypeICMPv6                       = gopacket.RegisterLayerType(57, gopacket.LayerTypeMetadata{Name: "ICMPv6", Decoder: /* gopacket.DecodeFunc(decodeICMPv6)} */ generateDecoders()})
//	LayerTypeLinkLayerDiscovery           = gopacket.RegisterLayerType(58, gopacket.LayerTypeMetadata{Name: "LinkLayerDiscovery", Decoder: /* gopacket.DecodeFunc(decodeLinkLayerDiscovery)} */ generateDecoders()})
//	LayerTypeCiscoDiscoveryInfo           = gopacket.RegisterLayerType(59, gopacket.LayerTypeMetadata{Name: "CiscoDiscoveryInfo", Decoder: /* gopacket.DecodeFunc(decodeCiscoDiscoveryInfo)} */ generateDecoders()})
//	LayerTypeLinkLayerDiscoveryInfo       = gopacket.RegisterLayerType(60, gopacket.LayerTypeMetadata{Name: "LinkLayerDiscoveryInfo", Decoder: nil})
//	LayerTypeNortelDiscovery              = gopacket.RegisterLayerType(61, gopacket.LayerTypeMetadata{Name: "NortelDiscovery", Decoder: /* gopacket.DecodeFunc(decodeNortelDiscovery)} */ generateDecoders()})
//	LayerTypeIGMP                         = gopacket.RegisterLayerType(62, gopacket.LayerTypeMetadata{Name: "IGMP", Decoder: /* gopacket.DecodeFunc(decodeIGMP)} */ generateDecoders()})
//	LayerTypePFLog                        = gopacket.RegisterLayerType(63, gopacket.LayerTypeMetadata{Name: "PFLog", Decoder: /* gopacket.DecodeFunc(decodePFLog)} */ generateDecoders()})
//	LayerTypeRadioTap                     = gopacket.RegisterLayerType(64, gopacket.LayerTypeMetadata{Name: "RadioTap", Decoder: /* gopacket.DecodeFunc(decodeRadioTap)} */ generateDecoders()})
//	LayerTypeDot11                        = gopacket.RegisterLayerType(65, gopacket.LayerTypeMetadata{Name: "Dot11", Decoder: /* gopacket.DecodeFunc(decodeDot11)} */ generateDecoders()})
//	LayerTypeDot11Ctrl                    = gopacket.RegisterLayerType(66, gopacket.LayerTypeMetadata{Name: "Dot11Ctrl", Decoder: /* gopacket.DecodeFunc(decodeDot11Ctrl)} */ generateDecoders()})
//	LayerTypeDot11Data                    = gopacket.RegisterLayerType(67, gopacket.LayerTypeMetadata{Name: "Dot11Data", Decoder: /* gopacket.DecodeFunc(decodeDot11Data)} */ generateDecoders()})
//	LayerTypeDot11DataCFAck               = gopacket.RegisterLayerType(68, gopacket.LayerTypeMetadata{Name: "Dot11DataCFAck", Decoder: /* gopacket.DecodeFunc(decodeDot11DataCFAck)} */ generateDecoders()})
//	LayerTypeDot11DataCFPoll              = gopacket.RegisterLayerType(69, gopacket.LayerTypeMetadata{Name: "Dot11DataCFPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataCFPoll)} */ generateDecoders()})
//	LayerTypeDot11DataCFAckPoll           = gopacket.RegisterLayerType(70, gopacket.LayerTypeMetadata{Name: "Dot11DataCFAckPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataCFAckPoll)} */ generateDecoders()})
//	LayerTypeDot11DataNull                = gopacket.RegisterLayerType(71, gopacket.LayerTypeMetadata{Name: "Dot11DataNull", Decoder: /* gopacket.DecodeFunc(decodeDot11DataNull)} */ generateDecoders()})
//	LayerTypeDot11DataCFAckNoData         = gopacket.RegisterLayerType(72, gopacket.LayerTypeMetadata{Name: "Dot11DataCFAck", Decoder: /* gopacket.DecodeFunc(decodeDot11DataCFAck)} */ generateDecoders()})
//	LayerTypeDot11DataCFPollNoData        = gopacket.RegisterLayerType(73, gopacket.LayerTypeMetadata{Name: "Dot11DataCFPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataCFPoll)} */ generateDecoders()})
//	LayerTypeDot11DataCFAckPollNoData     = gopacket.RegisterLayerType(74, gopacket.LayerTypeMetadata{Name: "Dot11DataCFAckPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataCFAckPoll)} */ generateDecoders()})
//	LayerTypeDot11DataQOSData             = gopacket.RegisterLayerType(75, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSData", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSData)} */ generateDecoders()})
//	LayerTypeDot11DataQOSDataCFAck        = gopacket.RegisterLayerType(76, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSDataCFAck", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSDataCFAck)} */ generateDecoders()})
//	LayerTypeDot11DataQOSDataCFPoll       = gopacket.RegisterLayerType(77, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSDataCFPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSDataCFPoll)} */ generateDecoders()})
//	LayerTypeDot11DataQOSDataCFAckPoll    = gopacket.RegisterLayerType(78, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSDataCFAckPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSDataCFAckPoll)} */ generateDecoders()})
//	LayerTypeDot11DataQOSNull             = gopacket.RegisterLayerType(79, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSNull", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSNull)} */ generateDecoders()})
//	LayerTypeDot11DataQOSCFPollNoData     = gopacket.RegisterLayerType(80, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSCFPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSCFPollNoData)} */ generateDecoders()})
//	LayerTypeDot11DataQOSCFAckPollNoData  = gopacket.RegisterLayerType(81, gopacket.LayerTypeMetadata{Name: "Dot11DataQOSCFAckPoll", Decoder: /* gopacket.DecodeFunc(decodeDot11DataQOSCFAckPollNoData)} */ generateDecoders()})
//	LayerTypeDot11InformationElement      = gopacket.RegisterLayerType(82, gopacket.LayerTypeMetadata{Name: "Dot11InformationElement", Decoder: /* gopacket.DecodeFunc(decodeDot11InformationElement)} */ generateDecoders()})
//	LayerTypeDot11CtrlCTS                 = gopacket.RegisterLayerType(83, gopacket.LayerTypeMetadata{Name: "Dot11CtrlCTS", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlCTS)} */ generateDecoders()})
//	LayerTypeDot11CtrlRTS                 = gopacket.RegisterLayerType(84, gopacket.LayerTypeMetadata{Name: "Dot11CtrlRTS", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlRTS)} */ generateDecoders()})
//	LayerTypeDot11CtrlBlockAckReq         = gopacket.RegisterLayerType(85, gopacket.LayerTypeMetadata{Name: "Dot11CtrlBlockAckReq", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlBlockAckReq)} */ generateDecoders()})
//	LayerTypeDot11CtrlBlockAck            = gopacket.RegisterLayerType(86, gopacket.LayerTypeMetadata{Name: "Dot11CtrlBlockAck", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlBlockAck)} */ generateDecoders()})
//	LayerTypeDot11CtrlPowersavePoll       = gopacket.RegisterLayerType(87, gopacket.LayerTypeMetadata{Name: "Dot11CtrlPowersavePoll", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlPowersavePoll)} */ generateDecoders()})
//	LayerTypeDot11CtrlAck                 = gopacket.RegisterLayerType(88, gopacket.LayerTypeMetadata{Name: "Dot11CtrlAck", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlAck)} */ generateDecoders()})
//	LayerTypeDot11CtrlCFEnd               = gopacket.RegisterLayerType(89, gopacket.LayerTypeMetadata{Name: "Dot11CtrlCFEnd", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlCFEnd)} */ generateDecoders()})
//	LayerTypeDot11CtrlCFEndAck            = gopacket.RegisterLayerType(90, gopacket.LayerTypeMetadata{Name: "Dot11CtrlCFEndAck", Decoder: /* gopacket.DecodeFunc(decodeDot11CtrlCFEndAck)} */ generateDecoders()})
//	LayerTypeDot11MgmtAssociationReq      = gopacket.RegisterLayerType(91, gopacket.LayerTypeMetadata{Name: "Dot11MgmtAssociationReq", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtAssociationReq)} */ generateDecoders()})
//	LayerTypeDot11MgmtAssociationResp     = gopacket.RegisterLayerType(92, gopacket.LayerTypeMetadata{Name: "Dot11MgmtAssociationResp", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtAssociationResp)} */ generateDecoders()})
//	LayerTypeDot11MgmtReassociationReq    = gopacket.RegisterLayerType(93, gopacket.LayerTypeMetadata{Name: "Dot11MgmtReassociationReq", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtReassociationReq)} */ generateDecoders()})
//	LayerTypeDot11MgmtReassociationResp   = gopacket.RegisterLayerType(94, gopacket.LayerTypeMetadata{Name: "Dot11MgmtReassociationResp", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtReassociationResp)} */ generateDecoders()})
//	LayerTypeDot11MgmtProbeReq            = gopacket.RegisterLayerType(95, gopacket.LayerTypeMetadata{Name: "Dot11MgmtProbeReq", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtProbeReq)} */ generateDecoders()})
//	LayerTypeDot11MgmtProbeResp           = gopacket.RegisterLayerType(96, gopacket.LayerTypeMetadata{Name: "Dot11MgmtProbeResp", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtProbeResp)} */ generateDecoders()})
//	LayerTypeDot11MgmtMeasurementPilot    = gopacket.RegisterLayerType(97, gopacket.LayerTypeMetadata{Name: "Dot11MgmtMeasurementPilot", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtMeasurementPilot)} */ generateDecoders()})
//	LayerTypeDot11MgmtBeacon              = gopacket.RegisterLayerType(98, gopacket.LayerTypeMetadata{Name: "Dot11MgmtBeacon", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtBeacon)} */ generateDecoders()})
//	LayerTypeDot11MgmtATIM                = gopacket.RegisterLayerType(99, gopacket.LayerTypeMetadata{Name: "Dot11MgmtATIM", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtATIM)} */ generateDecoders()})
//	LayerTypeDot11MgmtDisassociation      = gopacket.RegisterLayerType(100, gopacket.LayerTypeMetadata{Name: "Dot11MgmtDisassociation", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtDisassociation)} */ generateDecoders()})
//	LayerTypeDot11MgmtAuthentication      = gopacket.RegisterLayerType(101, gopacket.LayerTypeMetadata{Name: "Dot11MgmtAuthentication", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtAuthentication)} */ generateDecoders()})
//	LayerTypeDot11MgmtDeauthentication    = gopacket.RegisterLayerType(102, gopacket.LayerTypeMetadata{Name: "Dot11MgmtDeauthentication", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtDeauthentication)} */ generateDecoders()})
//	LayerTypeDot11MgmtAction              = gopacket.RegisterLayerType(103, gopacket.LayerTypeMetadata{Name: "Dot11MgmtAction", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtAction)} */ generateDecoders()})
//	LayerTypeDot11MgmtActionNoAck         = gopacket.RegisterLayerType(104, gopacket.LayerTypeMetadata{Name: "Dot11MgmtActionNoAck", Decoder: /* opacket.DecodeFunc(decodeDot11MgmtActionNoAck)} */ generateDecoders()})
//	LayerTypeDot11MgmtArubaWLAN           = gopacket.RegisterLayerType(105, gopacket.LayerTypeMetadata{Name: "Dot11MgmtArubaWLAN", Decoder: /* gopacket.DecodeFunc(decodeDot11MgmtArubaWLAN)} */ generateDecoders()})
//	LayerTypeDot11WEP                     = gopacket.RegisterLayerType(106, gopacket.LayerTypeMetadata{Name: "Dot11WEP", Decoder: /* gopacket.DecodeFunc(decodeDot11WEP)} */ generateDecoders()})
//	LayerTypeDNS                          = gopacket.RegisterLayerType(107, gopacket.LayerTypeMetadata{Name: "DNS", Decoder: /* gopacket.DecodeFunc(decodeDNS)} */ generateDecoders()})
//	LayerTypeUSB                          = gopacket.RegisterLayerType(108, gopacket.LayerTypeMetadata{Name: "USB", Decoder: /* gopacket.DecodeFunc(decodeUSB)} */ generateDecoders()})
//	LayerTypeUSBRequestBlockSetup         = gopacket.RegisterLayerType(109, gopacket.LayerTypeMetadata{Name: "USBRequestBlockSetup", Decoder: /* gopacket.DecodeFunc(decodeUSBRequestBlockSetup)} */ generateDecoders()})
//	LayerTypeUSBControl                   = gopacket.RegisterLayerType(110, gopacket.LayerTypeMetadata{Name: "USBControl", Decoder: /* gopacket.DecodeFunc(decodeUSBControl)} */ generateDecoders()})
//	LayerTypeUSBInterrupt                 = gopacket.RegisterLayerType(111, gopacket.LayerTypeMetadata{Name: "USBInterrupt", Decoder: /* gopacket.DecodeFunc(decodeUSBInterrupt)} */ generateDecoders()})
//	LayerTypeUSBBulk                      = gopacket.RegisterLayerType(112, gopacket.LayerTypeMetadata{Name: "USBBulk", Decoder: /* gopacket.DecodeFunc(decodeUSBBulk)} */ generateDecoders()})
//	LayerTypeLinuxSLL                     = gopacket.RegisterLayerType(113, gopacket.LayerTypeMetadata{Name: "Linux SLL", Decoder: /* gopacket.DecodeFunc(decodeLinuxSLL)} */ generateDecoders()})
//	LayerTypeSFlow                        = gopacket.RegisterLayerType(114, gopacket.LayerTypeMetadata{Name: "SFlow", Decoder: /* gopacket.DecodeFunc(decodeSFlow)} */ generateDecoders()})
//	LayerTypePrismHeader                  = gopacket.RegisterLayerType(115, gopacket.LayerTypeMetadata{Name: "Prism monitor mode header", Decoder: /* gopacket.DecodeFunc(decodePrismHeader)} */ generateDecoders()})
//	LayerTypeVXLAN                        = gopacket.RegisterLayerType(116, gopacket.LayerTypeMetadata{Name: "VXLAN", Decoder: /* gopacket.DecodeFunc(decodeVXLAN)} */ generateDecoders()})
//	LayerTypeNTP                          = gopacket.RegisterLayerType(117, gopacket.LayerTypeMetadata{Name: "NTP", Decoder: /* opacket.DecodeFunc(decodeNTP)} */ generateDecoders()})
//	LayerTypeDHCPv4                       = gopacket.RegisterLayerType(118, gopacket.LayerTypeMetadata{Name: "DHCPv4", Decoder: /* gopacket.DecodeFunc(decodeDHCPv4)} */ generateDecoders()})
//	LayerTypeVRRP                         = gopacket.RegisterLayerType(119, gopacket.LayerTypeMetadata{Name: "VRRP", Decoder: /* gopacket.DecodeFunc(decodeVRRP)} */ generateDecoders()})
//	LayerTypeGeneve                       = gopacket.RegisterLayerType(120, gopacket.LayerTypeMetadata{Name: "Geneve", Decoder: /* gopacket.DecodeFunc(decodeGeneve)} */ generateDecoders()})
//	LayerTypeSTP                          = gopacket.RegisterLayerType(121, gopacket.LayerTypeMetadata{Name: "STP", Decoder: /* gopacket.DecodeFunc(decodeSTP)} */ generateDecoders()})
	LayerTypeBFD                          = gopacket.RegisterLayerType(122, gopacket.LayerTypeMetadata{Name: "BFD", Decoder: /* gopacket.DecodeFunc(decodeBFD)} */ generateDecoders()})
//	LayerTypeOSPF                         = gopacket.RegisterLayerType(123, gopacket.LayerTypeMetadata{Name: "OSPF", Decoder: /* gopacket.DecodeFunc(decodeOSPF)} */ generateDecoders()})
//	LayerTypeICMPv6RouterSolicitation     = gopacket.RegisterLayerType(124, gopacket.LayerTypeMetadata{Name: "ICMPv6RouterSolicitation", Decoder: /* gopacket.DecodeFunc(decodeICMPv6RouterSolicitation)} */ generateDecoders()})
//	LayerTypeICMPv6RouterAdvertisement    = gopacket.RegisterLayerType(125, gopacket.LayerTypeMetadata{Name: "ICMPv6RouterAdvertisement", Decoder: /* gopacket.DecodeFunc(decodeICMPv6RouterAdvertisement)} */ generateDecoders()})
//	LayerTypeICMPv6NeighborSolicitation   = gopacket.RegisterLayerType(126, gopacket.LayerTypeMetadata{Name: "ICMPv6NeighborSolicitation", Decoder: /* gopacket.DecodeFunc(decodeICMPv6NeighborSolicitation)} */ generateDecoders()})
//	LayerTypeICMPv6NeighborAdvertisement  = gopacket.RegisterLayerType(127, gopacket.LayerTypeMetadata{Name: "ICMPv6NeighborAdvertisement", Decoder: /* gopacket.DecodeFunc(decodeICMPv6NeighborAdvertisement)} */ generateDecoders()})
//	LayerTypeICMPv6Redirect               = gopacket.RegisterLayerType(128, gopacket.LayerTypeMetadata{Name: "ICMPv6Redirect", Decoder: /* gopacket.DecodeFunc(decodeICMPv6Redirect)} */ generateDecoders()})
//	LayerTypeGTPv1U                       = gopacket.RegisterLayerType(129, gopacket.LayerTypeMetadata{Name: "GTPv1U", Decoder: /* gopacket.DecodeFunc(decodeGTPv1u)} */ generateDecoders()})
//	LayerTypeEAPOLKey                     = gopacket.RegisterLayerType(130, gopacket.LayerTypeMetadata{Name: "EAPOLKey", Decoder: /* gopacket.DecodeFunc(decodeEAPOLKey)} */ generateDecoders()})
//	LayerTypeLCM                          = gopacket.RegisterLayerType(131, gopacket.LayerTypeMetadata{Name: "LCM", Decoder: /* gopacket.DecodeFunc(decodeLCM)} */ generateDecoders()})
//	LayerTypeICMPv6Echo                   = gopacket.RegisterLayerType(132, gopacket.LayerTypeMetadata{Name: "ICMPv6Echo", Decoder: /* gopacket.DecodeFunc(decodeICMPv6Echo)} */ generateDecoders()})
//	LayerTypeSIP                          = gopacket.RegisterLayerType(133, gopacket.LayerTypeMetadata{Name: "SIP", Decoder: /* gopacket.DecodeFunc(decodeSIP)} */ generateDecoders()})
//	LayerTypeDHCPv6                       = gopacket.RegisterLayerType(134, gopacket.LayerTypeMetadata{Name: "DHCPv6", Decoder: /* gopacket.DecodeFunc(decodeDHCPv6)} */ generateDecoders()})
//	LayerTypeMLDv1MulticastListenerReport = gopacket.RegisterLayerType(135, gopacket.LayerTypeMetadata{Name: "MLDv1MulticastListenerReport", Decoder: /* gopacket.DecodeFunc(decodeMLDv1MulticastListenerReport)} */ generateDecoders()})
//	LayerTypeMLDv1MulticastListenerDone   = gopacket.RegisterLayerType(136, gopacket.LayerTypeMetadata{Name: "MLDv1MulticastListenerDone", Decoder: /* gopacket.DecodeFunc(decodeMLDv1MulticastListenerDone)} */ generateDecoders()})
//	LayerTypeMLDv1MulticastListenerQuery  = gopacket.RegisterLayerType(137, gopacket.LayerTypeMetadata{Name: "MLDv1MulticastListenerQuery", Decoder: /* gopacket.DecodeFunc(decodeMLDv1MulticastListenerQuery)} */ generateDecoders()})
//	LayerTypeMLDv2MulticastListenerReport = gopacket.RegisterLayerType(138, gopacket.LayerTypeMetadata{Name: "MLDv2MulticastListenerReport", Decoder: /* gopacket.DecodeFunc(decodeMLDv2MulticastListenerReport)} */ generateDecoders()})
//	LayerTypeMLDv2MulticastListenerQuery  = gopacket.RegisterLayerType(139, gopacket.LayerTypeMetadata{Name: "MLDv2MulticastListenerQuery", Decoder: /* gopacket.DecodeFunc(decodeMLDv2MulticastListenerQuery)} */ generateDecoders()})
//	LayerTypeTLS                          = gopacket.RegisterLayerType(140, gopacket.LayerTypeMetadata{Name: "TLS", Decoder: /* gopacket.DecodeFunc(decodeTLS)} */ generateDecoders()})
//	LayerTypeModbusTCP                    = gopacket.RegisterLayerType(141, gopacket.LayerTypeMetadata{Name: "ModbusTCP", Decoder: /* gopacket.DecodeFunc(decodeModbusTCP)} */ generateDecoders()})
//	LayerTypeRMCP                         = gopacket.RegisterLayerType(142, gopacket.LayerTypeMetadata{Name: "RMCP", Decoder: /* gopacket.DecodeFunc(decodeRMCP)} */ generateDecoders()})
//	LayerTypeASF                          = gopacket.RegisterLayerType(143, gopacket.LayerTypeMetadata{Name: "ASF", Decoder: /* gopacket.DecodeFunc(decodeASF)} */ generateDecoders()})
//	LayerTypeASFPresencePong              = gopacket.RegisterLayerType(144, gopacket.LayerTypeMetadata{Name: "ASFPresencePong", Decoder: /* gopacket.DecodeFunc(decodeASFPresencePong)} */ generateDecoders()})
//	LayerTypeERSPANII                     = gopacket.RegisterLayerType(145, gopacket.LayerTypeMetadata{Name: "ERSPAN Type II", Decoder: /* gopacket.DecodeFunc(decodeERSPANII)} */ generateDecoders()})
//	LayerTypeRADIUS                       = gopacket.RegisterLayerType(146, gopacket.LayerTypeMetadata{Name: "RADIUS", Decoder: /* gopacket.DecodeFunc(decodeRADIUS)} */ generateDecoders()})
)

/*
var (
	// LayerClassIPNetwork contains TCP/IP network layer types.
	LayerClassIPNetwork = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeIPv4,
		LayerTypeIPv6,
	})
	// LayerClassIPTransport contains TCP/IP transport layer types.
	LayerClassIPTransport = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeTCP,
		LayerTypeUDP,
		LayerTypeSCTP,
	})
	// LayerClassIPControl contains TCP/IP control protocols.
	LayerClassIPControl = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeICMPv4,
		LayerTypeICMPv6,
	})
	// LayerClassSCTPChunk contains SCTP chunk types (not the top-level SCTP
	// layer).
	LayerClassSCTPChunk = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeSCTPUnknownChunkType,
		LayerTypeSCTPData,
		LayerTypeSCTPInit,
		LayerTypeSCTPSack,
		LayerTypeSCTPHeartbeat,
		LayerTypeSCTPError,
		LayerTypeSCTPShutdown,
		LayerTypeSCTPShutdownAck,
		LayerTypeSCTPCookieEcho,
		LayerTypeSCTPEmptyLayer,
		LayerTypeSCTPInitAck,
		LayerTypeSCTPHeartbeatAck,
		LayerTypeSCTPAbort,
		LayerTypeSCTPShutdownComplete,
		LayerTypeSCTPCookieAck,
	})
	// LayerClassIPv6Extension contains IPv6 extension headers.
	LayerClassIPv6Extension = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeIPv6HopByHop,
		LayerTypeIPv6Routing,
		LayerTypeIPv6Fragment,
		LayerTypeIPv6Destination,
	})
	LayerClassIPSec = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeIPSecAH,
		LayerTypeIPSecESP,
	})
	// LayerClassICMPv6NDP contains ICMPv6 neighbor discovery protocol
	// messages.
	LayerClassICMPv6NDP = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeICMPv6RouterSolicitation,
		LayerTypeICMPv6RouterAdvertisement,
		LayerTypeICMPv6NeighborSolicitation,
		LayerTypeICMPv6NeighborAdvertisement,
		LayerTypeICMPv6Redirect,
	})
	// LayerClassMLDv1 contains multicast listener discovery protocol
	LayerClassMLDv1 = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeMLDv1MulticastListenerQuery,
		LayerTypeMLDv1MulticastListenerReport,
		LayerTypeMLDv1MulticastListenerDone,
	})
	// LayerClassMLDv2 contains multicast listener discovery protocol v2
	LayerClassMLDv2 = gopacket.NewLayerClass([]gopacket.LayerType{
		LayerTypeMLDv1MulticastListenerReport,
		LayerTypeMLDv1MulticastListenerDone,
		LayerTypeMLDv2MulticastListenerReport,
		LayerTypeMLDv1MulticastListenerQuery,
		LayerTypeMLDv2MulticastListenerQuery,
	})
)
*/