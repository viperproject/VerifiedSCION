// Copyright 2012 Google, Inc. All rights reserved.
//
// Use of this source code is governed by a BSD-style license
// that can be found in the LICENSE file in the root of the source
// tree.

// +gobra

package gopacket

import sl "github.com/scionproto/scion/verification/utils/slices"

type DecodeFeedback interface {
	pred Mem()

	preserves Mem()
	decreases
	SetTruncated()
}

type nilDecodeFeedback struct{}

decreases
func (nilDecodeFeedback) SetTruncated() {}

pred (n nilDecodeFeedback) Mem() { true }

nilDecodeFeedback implements DecodeFeedback

// NilDecodeFeedback implements DecodeFeedback by doing nothing.
var NilDecodeFeedback DecodeFeedback = nilDecodeFeedback{}

type PacketBuilder interface {
	DecodeFeedback
	pred Mem()

	// (VerifiedSCION) not sure if we need it
	// preserves l.Mem()
	preserves Mem()
	decreases
	AddLayer(l Layer)

	// (VerifiedSCION) not sure if we need it
	// preserves l.Mem()
	preserves Mem()
	decreases
	SetLinkLayer(l LinkLayer)

	// (VerifiedSCION) not sure if we need it
	// preserves l.Mem()
	preserves Mem()
	decreases
	SetNetworkLayer(l NetworkLayer)

	// (VerifiedSCION) not sure if we need it
	// preserves l.Mem()
	preserves Mem()
	decreases
	SetTransportLayer(l TransportLayer)

	// (VerifiedSCION) not sure if we need it
	// preserves l.Mem()
	preserves Mem()
	decreases
	SetApplicationLayer(l ApplicationLayer)

	// (VerifiedSCION) not sure if we need it
	// preserves l.Mem()
	preserves Mem()
	decreases
	SetErrorLayer(l ErrorLayer)

	requires Mem()
	requires next.Mem()
	ensures Mem()
	ensures err != nil ==> err.ErrorMem()
	decreases
	NextDecoder(next Decoder) (err error)

	preserves Mem()
	decreases
	DumpPacketData()

	preserves Mem()
	decreases
	DecodeOptions() *DecodeOptions
}

type Decoder interface {
	pred Mem()

	requires acc(PkgMem(), _)
	requires sl.Bytes(b, 0, len(b))
	preserves Mem()
	preserves p.Mem()
	decreases
	Decode(b []byte, p PacketBuilder) error
}

// post init property
ghost
ensures NilDecodeFeedback != nil
ensures NilDecodeFeedback.Mem()
decreases
func AssertInvariantNilDecodeFeedback()

// TODO: explain why this is an alias instead of declaredT
// DecodeFunc wraps a function to make it a Decoder.
type DecodeFunc = func([]byte, PacketBuilder) error

// TODO: explain why it is not ghost, add doc
requires f implements TrivialDecode // put contract for f here
ensures  r != nil
ensures  r.Mem()
decreases
func PromoteDecodeFuncToDecoder(f DecodeFunc) (r Decoder) {
	dec := TrivialDecoder{f}
	fold dec.Mem()
	return Decoder(dec)
}

type TrivialDecoder struct{
	f DecodeFunc
}

pred (t TrivialDecoder) Mem() {
	t.f implements TrivialDecode
}
requires acc(PkgMem(), _)
requires sl.Bytes(b, 0, len(b))
preserves t.Mem()
preserves p.Mem()
decreases
func (t TrivialDecoder) Decode(b []byte, p PacketBuilder) error {
	unfold t.Mem()
	defer fold t.Mem()
	return t.f(b, p) as TrivialDecode
}

TrivialDecoder implements Decoder

// only acts as a closure spec, not a trusted method
requires  acc(PkgMem(), _)
requires  sl.Bytes(b, 0, len(b))
preserves p.Mem()
decreases
func TrivialDecode(b []byte, p PacketBuilder) error