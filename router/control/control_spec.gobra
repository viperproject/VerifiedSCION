// Copyright 2022 Eth Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// (VerifiedSCION) This file contains the definitions from this package that
// are necessary to verify the router package.

// +gobra

package control

import (
	"net"

	"github.com/scionproto/scion/pkg/addr"
	"github.com/scionproto/scion/private/topology"
)

// InterfaceState indicates the state of the interface.
type InterfaceState string

// (VerifiedSCION) Made these variables to avoid type errors in Gobra
const (
	InterfaceUp   InterfaceState = "up"
	InterfaceDown InterfaceState = "down"
)

// LinkEnd represents on end of a link.
type LinkEnd struct {
	IA   addr.IA
	Addr *net.UDPAddr
}

// BFD is the configuration for the BFD sessions.
type BFD topology.BFD

// InternalInterface represents the internal interface of a router.
type InternalInterface struct {
	IA   addr.IA
	Addr *net.UDPAddr
}

// ExternalInterface represents an external interface of a router.
type ExternalInterface struct {
	// InterfaceID is the identifier of the external interface.
	InterfaceID uint16
	// Link is the information associated with this link.
	Link LinkInfo
	// State indicates the interface state.
	State InterfaceState
}

// SiblingInterface represents a sibling interface of a router.
type SiblingInterface struct {
	// InterfaceID is the identifier of the external interface.
	InterfaceID uint16
	// InternalInterfaces is the local address (internal interface)
	// of the sibling router that owns this interface.
	InternalInterface *net.UDPAddr
	// Relationship describes the type of inter-AS links.
	Relationship topology.LinkType
	// MTU is the maximum Transmission Unit for SCION packets.
	MTU int
	// NeighborIA is the ISD-AS number of the neighbor AS this interface connects to.
	NeighborIA addr.IA
	// State indicates the interface state. This refers to the connectivity state
	// of the internal network to reach this interface. It does not specify the
	// state of the interface itself.
	State InterfaceState
}

type LinkInfo struct {
	Local    LinkEnd
	Remote   LinkEnd
	Instance string
	LinkTo   topology.LinkType
	BFD      BFD
	MTU      int
}