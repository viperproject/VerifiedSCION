// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package path

// interface IDs
type IF uint16
// terms in the term algebra
type MsgTerm seq[byte]

// Abstract representation of an HopField
type HF domain {
    func inIF2(h HF) option[IF]
    func egIF2(h HF) option[IF]
    func HVF(h HF) MsgTerm
}

// we consider 0 to be the ID of the internal network in HopField
// we consider None to be the ID of the internal network in HF
ghost
ensures h.ConsIngress == 0 ==> inIF2(res) == none[IF]
ensures h.ConsIngress != 0 ==> inIF2(res) == some(IF(h.ConsIngress))
ensures h.ConsEgress == 0 ==> egIF2(res) == none[IF]
ensures h.ConsEgress != 0 ==> egIF2(res) == some(IF(h.ConsIngress))
pure func AbstractHopField(h HopField) (res HF)