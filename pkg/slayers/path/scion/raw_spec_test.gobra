// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package scion

import "github.com/scionproto/scion/verification/utils/slices"

func testAllocateNonInitRaw() {
	r := &Raw{}
	fold r.Base.NonInitMem()
	fold r.NonInitMem()
}

func testAllocateRaw() {
	r := &Raw{}
	fold r.Base.Mem()
	assert r.Base.Len() == MetaLen
	s := make([]byte, MetaLen)
	fold slices.AbsSlice_Bytes(s, 0, len(s))
	r.Raw = s
	fold r.Mem(s)
}
