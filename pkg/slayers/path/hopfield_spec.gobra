// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package path

ghost const MetaLen = 4

pred (h *HopField) Mem() {
	acc(h) && h.ConsIngress >= 0 && h.ConsEgress >= 0
}

ghost 
decreases
pure func InfoFieldOffset(currINF int) int {
	return MetaLen + InfoLen * currINF
}

ghost 
requires 0 <= currINF
requires InfoFieldOffset(currINF) < len(raw)
requires acc(&raw[InfoFieldOffset(currINF)], _)
decreases
pure func ConsDir(raw []byte, currINF int) bool {
	return raw[InfoFieldOffset(currINF)] & 0x1 == 0x1
}

ghost 
requires 0 <= currINF
requires InfoFieldOffset(currINF) < len(raw)
requires acc(&raw[InfoFieldOffset(currINF)], _)
decreases
pure func Peer(raw []byte, currINF int) bool {
	return raw[InfoFieldOffset(currINF)] & 0x2 == 0x2
}
